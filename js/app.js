// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const state = {
    currentQuestion: 0,
    score: 0,
    timer: null,
    timeLeft: 15,
    userData: {
        name: '–ò–≥—Ä–æ–∫',
        photo: 'images/icons/user.png'
    }
};

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const elements = {
    startScreen: document.getElementById('start-screen'),
    quizScreen: document.getElementById('quiz-screen'),
    resultScreen: document.getElementById('result-screen'),
    finalScreen: document.getElementById('final-screen'),
    rulesScreen: document.getElementById('rules-screen'),
    startBtn: document.getElementById('start-btn'),
    rulesBtn: document.getElementById('rules-btn'),
    backBtn: document.getElementById('back-btn'),
    nextBtn: document.getElementById('next-btn'),
    restartBtn: document.getElementById('restart-btn'),
    shareBtn: document.getElementById('share-btn'),
    questionText: document.getElementById('question-text'),
    mythBtn: document.getElementById('myth-btn'),
    realityBtn: document.getElementById('reality-btn'),
    progressFill: document.getElementById('progress-fill'),
    progressText: document.getElementById('progress-text'),
    timerElement: document.getElementById('timer'),
    resultTitle: document.getElementById('result-title'),
    resultExplanation: document.getElementById('result-explanation'),
    finalScore: document.getElementById('final-score'),
    scoreMessage: document.getElementById('score-message'),
    achievements: document.getElementById('achievements'),
    userName: document.getElementById('user-name'),
    userPhoto: document.getElementById('user-photo')
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞
    const playerName = localStorage.getItem('quiz-player-name') || '–ò–≥—Ä–æ–∫';
    const playerPhoto = localStorage.getItem('quiz-player-photo') || 'images/icons/user.png';
    
    state.userData.name = playerName;
    state.userData.photo = playerPhoto;
    updateUserInfo();
    
    // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    elements.startBtn.addEventListener('click', startQuiz);
    elements.rulesBtn.addEventListener('click', showRules);
    elements.backBtn.addEventListener('click', hideRules);
    elements.nextBtn.addEventListener('click', nextQuestion);
    elements.restartBtn.addEventListener('click', restartQuiz);
    elements.shareBtn.addEventListener('click', shareResults);
    elements.mythBtn.addEventListener('click', () => checkAnswer('myth'));
    elements.realityBtn.addEventListener('click', () => checkAnswer('reality'));
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–≥—Ä–∞
    const savedGame = localStorage.getItem('quiz-saved-game');
    if (savedGame) {
        const confirmRestore = confirm('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–≥—Ä–∞. –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?');
        if (confirmRestore) {
            const gameState = JSON.parse(savedGame);
            state.currentQuestion = gameState.currentQuestion;
            state.score = gameState.score;
            startQuiz();
        }
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function updateUserInfo() {
    elements.userName.textContent = state.userData.name;
    elements.userPhoto.src = state.userData.photo;
}

// –ù–∞—á–∞–ª–æ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
function startQuiz() {
    showQuestion();
    elements.startScreen.style.display = 'none';
    elements.quizScreen.style.display = 'flex';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞
function showRules() {
    elements.startScreen.style.display = 'none';
    elements.rulesScreen.style.display = 'flex';
}

// –°–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–∞
function hideRules() {
    elements.rulesScreen.style.display = 'none';
    elements.startScreen.style.display = 'flex';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å
function showQuestion() {
    resetTimer();
    startTimer();
    
    const question = questions[state.currentQuestion];
    elements.questionText.textContent = question.text;
    elements.progressText.textContent = `${state.currentQuestion + 1}/${questions.length}`;
    elements.progressFill.style.width = `${(state.currentQuestion / questions.length) * 100}%`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    saveGameState();
}

// –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
function startTimer() {
    state.timeLeft = 15;
    elements.timerElement.textContent = state.timeLeft;
    
    state.timer = setInterval(() => {
        state.timeLeft--;
        elements.timerElement.textContent = state.timeLeft;
        
        if (state.timeLeft <= 0) {
            clearInterval(state.timer);
            timeOut();
        }
    }, 1000);
}

// –°–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞
function resetTimer() {
    clearInterval(state.timer);
    state.timeLeft = 15;
    elements.timerElement.textContent = state.timeLeft;
}

// –í—Ä–µ–º—è –≤—ã—à–ª–æ
function timeOut() {
    const question = questions[state.currentQuestion];
    showResult(false, question);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
function checkAnswer(answer) {
    clearInterval(state.timer);
    
    const question = questions[state.currentQuestion];
    const isCorrect = (answer === 'myth' && question.isMyth) || 
                     (answer === 'reality' && !question.isMyth);
    
    if (isCorrect) {
        state.score++;
    }
    
    showResult(isCorrect, question);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function showResult(isCorrect, question) {
    elements.quizScreen.style.display = 'none';
    elements.resultScreen.style.display = 'flex';
    
    elements.resultTitle.textContent = isCorrect ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '‚ùå –ù–µ–≤–µ—Ä–Ω–æ!';
    
    let explanation = `<p><strong>${isCorrect ? '–í—ã –ø—Ä–∞–≤—ã!' : '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:'} –≠—Ç–æ ${question.isMyth ? '–ú–ò–§' : '–†–ï–ê–õ–¨–ù–û–°–¢–¨'}.</strong></p>`;
    explanation += `<p>${question.explanation}</p>`;
    
    if (question.tip) {
        explanation += `<div class="tip"><p>üí° <strong>–°–æ–≤–µ—Ç:</strong> ${question.tip}</p></div>`;
    }
    
    elements.resultExplanation.innerHTML = explanation;
}

// –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
function nextQuestion() {
    state.currentQuestion++;
    
    if (state.currentQuestion < questions.length) {
        elements.resultScreen.style.display = 'none';
        elements.quizScreen.style.display = 'flex';
        showQuestion();
    } else {
        showFinalScreen();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
function showFinalScreen() {
    elements.resultScreen.style.display = 'none';
    elements.finalScreen.style.display = 'flex';
    
    elements.finalScore.textContent = state.score;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    let message = '';
    if (state.score >= 22) {
        message = '–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –±–æ—Ä—â–µ–≤–∏–∫—É!';
    } else if (state.score >= 15) {
        message = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ù–æ –µ—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏.';
    } else {
        message = '–ù–µ–ø–ª–æ—Ö–æ, –Ω–æ —Å—Ç–æ–∏—Ç –∏–∑—É—á–∏—Ç—å —Ç–µ–º—É –ª—É—á—à–µ.';
    }
    elements.scoreMessage.textContent = message;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    showAchievements();
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∏–≥—Ä—É
    localStorage.removeItem('quiz-saved-game');
}

// –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
function showAchievements() {
    elements.achievements.innerHTML = '';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    const achievements = [];
    
    if (state.score >= 20) {
        achievements.push({
            title: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –±–æ—Ä—â–µ–≤–∏–∫—É',
            description: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ 20+ –≤–æ–ø—Ä–æ—Å–æ–≤',
            icon: ''
        });
    }
    
    if (state.score === questions.length) {
        achievements.push({
            title: '–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
            description: '–û—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã',
            icon: ''
        });
    }
    
    if (achievements.length === 0) {
        achievements.push({
            title: '–ù–æ–≤–∏—á–æ–∫',
            description: '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É—á–∏—Ç—å—Å—è!',
            icon: ''
        });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ DOM
    achievements.forEach(achievement => {
        const achievementElement = document.createElement('div');
        achievementElement.className = 'achievement';
        achievementElement.innerHTML = `
            <img src="images/icons/${achievement.icon || 'trophy.png'}" alt="–¢—Ä–æ—Ñ–µ–π">
            <div>
                <strong>${achievement.title}</strong>
                <p>${achievement.description}</p>
            </div>
        `;
        elements.achievements.appendChild(achievementElement);
    });
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
function restartQuiz() {
    state.currentQuestion = 0;
    state.score = 0;
    elements.finalScreen.style.display = 'none';
    startQuiz();
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
function shareResults() {
    const shareText = `–Ø –ø—Ä–æ—à–µ–ª –≤–∏–∫—Ç–æ—Ä–∏–Ω—É "–ë–æ—Ä—â–µ–≤–∏–∫: –ú–∏—Ñ –∏–ª–∏ –†–µ–∞–ª—å–Ω–æ—Å—Ç—å" —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º ${state.score}/25! –ü–æ–ø—Ä–æ–±—É–π –∏ —Ç—ã!`;
    
    if (navigator.share) {
        navigator.share({
            title: '–ë–æ—Ä—â–µ–≤–∏–∫: –ú–∏—Ñ –∏–ª–∏ –†–µ–∞–ª—å–Ω–æ—Å—Ç—å',
            text: shareText,
            url: window.location.href
        }).catch(err => {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ Web Share API:', err);
            fallbackShare(shareText);
        });
    } else {
        fallbackShare(shareText);
    }
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
function fallbackShare(shareText) {
    const shareUrl = `https://vk.com/share.php?url=${encodeURIComponent(window.location.href)}&title=${encodeURIComponent('–ë–æ—Ä—â–µ–≤–∏–∫: –ú–∏—Ñ –∏–ª–∏ –†–µ–∞–ª—å–Ω–æ—Å—Ç—å')}&comment=${encodeURIComponent(shareText)}`;
    
    const confirmShare = confirm(`${shareText}\n\n–•–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º?`);
    if (confirmShare) {
        window.open(shareUrl, '_blank');
    }
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
function saveGameState() {
    const gameState = {
        currentQuestion: state.currentQuestion,
        score: state.score
    };
    localStorage.setItem('quiz-saved-game', JSON.stringify(gameState));
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', initApp);